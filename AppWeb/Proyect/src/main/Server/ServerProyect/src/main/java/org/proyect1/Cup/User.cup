package org.proyect1.Cup;

import java_cup.runtime.*;
import java.util.ArrayList;
import org.proyect1.Objects.*;

class Login;

parser code{:
    private ArrayList<User> users = new ArrayList<User>();
    private ArrayList<ErrorL> errors = new ArrayList<ErrorL>();
    private ArrayList<String> messages = new ArrayList<String>();
    private String errorString = "";
    private boolean stringUser = false;
    private boolean stringPassword = false;
    private boolean stringName = false;
    private boolean stringInstitution = false;

    public ArrayList<User> getUsers(){
        return this.users;
    }

    public void addError(int line, int column, String message){
        errors.add(new ErrorL(errorString, line, column, "Sintactico", message));
    }

    public void syntax_error(Symbol s){
        errorString = s.value+"";
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        String message = "Error síntactico irrecuperable en la Línea " +
        (s.left)+ " Columna "+s.right+". Componente " + s.value +
        " no reconocido.";
        messages.add(message);
    }

:}

terminal OPENXS, XSON, VERSION, EQUALS, NUMBERVERSION, ENDXS, USER, COLON, TEXT, COMMA, PASSWORD,
         KEYA, USERDATA, BRACKETA, BRACKETC, KEYC, OPENREQ, INREQUEST, LOGINUSER, GREATERT, LESST, EDREQUEST, ENDREQ;

non terminal in, initRequestLogin, initlogin, initxson, login, initDataUser, endRequest, endKeyBracket;
non terminal String userStructure, passwordStructure;

start with in;

in::= initxson statement;

statement::= iniRequest onerequest endRequest
            | requests
            ;

requests::= initMoreRequest
            initRequest
            recursiveRequest
            endMoreRequest
            ;

recursiveRequest::= initRequest onerequest endRequest recursiveRequest
                  | initRequest onerequest endRequest
                  ;

onerequest::= newuser
            | edituser
            | deleteuser
            ;

newuser::= NEWUSER GREATERT
           initDataUser
           USER COLON TEXT:user COMMA //Return username of the new user
           PASSWORD COLON TEXT:password COMMA // Return password of the new user
           NAME COLON TEXT:name COMMA //Return name of the new user
           INSTITUTION COLON TEXT:institution COMMA//Return institution of the new user
           DATE COLON DATECREATION:dateCreation
           endKeyBracket
           //flag 1
           {:
                User user = new User(user.toString(), password.toString(), name.toString(),
                institution.toString(), dateCreation.toString(), 1);
                users.add(user);
                RESULT = user;
           :}
           ;

userStructure::= USER COLON TEXT:user COMMA
                   {:
                        RESULT = user;
                   :}
                 | error:e
                   {:
                        int line       = (eleft)+1;
                        int column     = eright;
                        String message = "No se cumple la estructura de usuario, se espera \"PASSWORD: \"NOMBRE DEL USUARIO\" ,";
                        addError(line, column, message);
                        RESULT = null;
                   :}
                 ;



edituser::= EDITUSER GREATERT
            initDataUser
            OLDUSER COLON TEXT:olduser COMMA //old user for the edit user
            NEWUSER COLON TEXT:newuser COMMA //new user for the edit user
            NEWPASSWORD COLON TEXT:newpassword COMMA //new password for the edit user
            INSTITUTION COLON TEXT:institution COMMA
            DATEEDIT COLON DATECREATION:dateCreation
            endKeyBracket
            //flag 2
            {:
                User user = new User(olduser.toString(), newuser.toString(), newpassword.toString(),
                institution.toString(), 2, dateCreation.toString());
                users.add(user);
                RESULT = user;
            :}
            |
            ;

deleteuser::= DELETEUSER GREATERT
              initDataUser
              USER COLON TEXT:user //user for the delete user
              endKeyBracket
              //flag 3
              {:
                User user = new User(user.toString());
                users.add(user);
                RESULT = user;
              :}
              ;

initlogin::= login endRequest;

initxson::= OPENXS XSON VERSION EQUALS NUMBERVERSION ENDXS;

login::= initRequest
         initDataUser
         userStructure:user
         passwordStructure:password
         endKeyBracket
         //flag 4
         {:
            User user = new User(user.toString(), password.toString());
            users.add(user);
            RESULT = user;
         :}
         ;

passwordStructure::= PASSWORD COLON TEXT:password
                     {:
                        RESULT = password;
                     :}
                     | error:e
                     {:
                        int line        = (eleft)+1;
                        int column      = eright;
                        String message = "No se cumple la estructura de usuario, se espera: \"PASSWORD: \"PASSWORD DEL USUARIO\"";
                        addError(line, column, message);
                        RESULT = null;
                     :}
                     ;

initDataUser::= KEYA USERDATA COLON BRACKETA KEYA
                | error:e
                {:
                    int line    = (eleft)+1;
                    int column  = eright;
                    String message = "No se cumple con el orden de las llaves de apertura xson";
                    addError(line, column, message);
                    RESULT = null;
                :}
                ;

endKeyBracket::= KEYC BRACKETC KEYC
                | error:e
                {:
                    int line    = (eleft)+1;
                    int column  = eright;
                    String message = "No se cumple con el orden de cierre de llaves en xson";
                    addError(line, column, message);
                    RESULT = null;
                :}
                ;

initRequest::= OPENREQ INREQUEST COLON
               | error:e
               {:
                    int line    = (eleft)+1;
                    int column  = eright;
                    String message = "No se cumple con el orden para iniciar una solicitud de login";
                    addError(line, column, message);
                    RESULT = null;
               :}
               ;

endRequest::= LESST EDREQUEST ENDREQ
              | error:e
               {:
                    int line    = (eleft)+1;
                    int column  = eright;
                    String message = "No se cumple con el orden para finalizar una solicitud de llaves en xson";
                    addError(line, column, message);
                    RESULT = null;
               :}
              ;

